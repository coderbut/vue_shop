{
    "sourceFile": "src/components/goods/Categories.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1638635752498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1638635752498,
            "name": "Commit-0",
            "content": "<template>\r\n  <div>\r\n    <!-- 面包屑 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片视图 -->\r\n    <el-card>\r\n      <el-row>\r\n        <el-col>\r\n          <el-button type=\"primary\" @click=\"showAddCatDialog\"\r\n            >添加分类\r\n          </el-button>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- 表格 -->\r\n      <tree-table\r\n        :columns=\"columns\"\r\n        :data=\"cateList\"\r\n        :expand-type=\"false\"\r\n        :selection-type=\"false\"\r\n        :show-row-hover=\"false\"\r\n        border\r\n        class=\"treeTable\"\r\n        show-index\r\n      >\r\n        <!-- 是否有效模板 -->\r\n        <template slot=\"isOk\" slot-scope=\"scope\">\r\n          <i\r\n            v-if=\"scope.row.cat_deleted === false\"\r\n            class=\"el-icon-success\"\r\n            style=\"color: lightgreen\"\r\n          ></i>\r\n          <i v-else class=\"el-icon-error\" style=\"color: red\"></i>\r\n        </template>\r\n        <!-- 排序模板 -->\r\n        <template slot=\"order\" slot-scope=\"scope\">\r\n          <el-tag v-if=\"scope.row.cat_level === 0\" size=\"mini\">一级</el-tag>\r\n          <el-tag\r\n            v-else-if=\"scope.row.cat_level === 1\"\r\n            size=\"mini\"\r\n            type=\"success\"\r\n            >二级\r\n          </el-tag>\r\n          <el-tag v-else size=\"mini\" type=\"warning\">三级</el-tag>\r\n        </template>\r\n        <!-- 操作模板 -->\r\n        <template slot=\"opt\" slot-scope=\"scope\">\r\n          <el-button\r\n            icon=\"el-icon-edit\"\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"showEditCateDialog(scope.row.cat_id)\"\r\n            >编辑\r\n          </el-button>\r\n          <!-- TODO 删除分类功能待开发 -->\r\n          <el-button\r\n            icon=\"el-icon-delete\"\r\n            size=\"mini\"\r\n            type=\"danger\"\r\n            @click=\"deleteCate(scope.row.cat_id)\"\r\n            >删除\r\n          </el-button>\r\n        </template>\r\n      </tree-table>\r\n      <!-- 分页区域 -->\r\n      <el-pagination\r\n        :current-page=\"queryInfo.pagenum\"\r\n        :page-size=\"queryInfo.pagesize\"\r\n        :page-sizes=\"[5, 10, 15]\"\r\n        :total=\"total\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n      >\r\n      </el-pagination>\r\n      <!-- 添加分类对话框 -->\r\n      <el-dialog\r\n        :visible.sync=\"addCatDialogVisible\"\r\n        title=\"添加分类\"\r\n        width=\"50%\"\r\n        @close=\"addCateDialogClosed\"\r\n      >\r\n        <!-- 添加分类表单 -->\r\n        <el-form\r\n          ref=\"addCateFormRef\"\r\n          :model=\"addCateForm\"\r\n          :rules=\"addCateFormRules\"\r\n          label-width=\"100px\"\r\n        >\r\n          <el-form-item label=\"分类名称\" prop=\"cat_name\">\r\n            <el-input v-model=\"addCateForm.cat_name\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"父级分类\">\r\n            <el-cascader\r\n              v-model=\"selectedKeys\"\r\n              :options=\"parentCateList\"\r\n              :props=\"cascaderProps\"\r\n              clearable\r\n              placeholder=\"不选择默认添加一级分类\"\r\n              @change=\"parentCateChanged\"\r\n            ></el-cascader>\r\n          </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"addCatDialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"addcate\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n      <!-- 编辑分类功能完成  -->\r\n      <el-dialog\r\n        title=\"编辑分类\"\r\n        :visible.sync=\"editCateDialogVisible\"\r\n        width=\"50%\"\r\n      >\r\n        <el-form\r\n          :model=\"editCateForm\"\r\n          :rules=\"editCateFormRules\"\r\n          ref=\"editCateFormRef\"\r\n          label-width=\"100px\"\r\n        >\r\n          <el-form-item label=\"活动名称\" prop=\"cat_name\">\r\n            <el-input v-model=\"editCateForm.cat_name\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"editCateDialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"editCate\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 查询参数\r\n      queryInfo: {\r\n        type: 3,\r\n        pagenum: 1,\r\n        pagesize: 5\r\n      },\r\n      // 商品分类数据列表\r\n      cateList: [],\r\n      // 总数据条数\r\n      total: 0,\r\n      // 为 table 指定类的定义\r\n      columns: [\r\n        {\r\n          label: \"分类名称\",\r\n          prop: \"cat_name\"\r\n        },\r\n        {\r\n          label: \"是否有效\",\r\n          // 表示将当前列自定义模板列\r\n          type: \"template\",\r\n          // 表示当前这一列使用模板的名称\r\n          template: \"isOk\"\r\n        },\r\n        {\r\n          label: \"排序\",\r\n          type: \"template\",\r\n          template: \"order\"\r\n        },\r\n        {\r\n          label: \"操作\",\r\n          type: \"template\",\r\n          template: \"opt\"\r\n        }\r\n      ],\r\n      // 添加分类对话框显隐\r\n      addCatDialogVisible: false,\r\n      // 添加分类的表单数据对象\r\n      addCateForm: {\r\n        // 将要添加对分类对名称\r\n        cat_name: \"\",\r\n        // 父级分类的id\r\n        cat_pid: 0,\r\n        // 添加对分类的等级\r\n        cat_level: 0\r\n      },\r\n      // 添加分类表单验证对象\r\n      addCateFormRules: {\r\n        cat_name: [\r\n          {\r\n            required: true,\r\n            message: \"请输入分类名称\",\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      },\r\n      // 保存父级分类数据\r\n      parentCateList: [],\r\n      // el-cascader 配置对象\r\n      cascaderProps: {\r\n        expandTrigger: \"hover\",\r\n        value: \"cat_id\",\r\n        label: \"cat_name\",\r\n        children: \"children\",\r\n        // 父级分类和子级分类都可以选中\r\n        checkStrictly: true\r\n      },\r\n      // 被选中的分类的 id 数组\r\n      selectedKeys: [],\r\n      // 编辑分类对话框显隐\r\n      editCateDialogVisible: false,\r\n      editCateForm: {\r\n        cat_id: \"\",\r\n        cat_name: \"\"\r\n      },\r\n      editCateFormRules: {\r\n        cat_name: [\r\n          {\r\n            required: true,\r\n            message: \"请输入分类名称\",\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    this.getcateList();\r\n  },\r\n  methods: {\r\n    // 获取商品分类数据\r\n    async getcateList() {\r\n      const { data: res } = await this.$http.get(\"categories\", {\r\n        params: this.queryInfo\r\n      });\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"获取商品分类失败！\");\r\n      }\r\n      // 将数据列表保存到 cateList 中\r\n      this.cateList = res.data.result;\r\n      // 总数据条数保存\r\n      this.total = res.data.total;\r\n    },\r\n    // 监听 pagesize 的改变\r\n    handleSizeChange(newSize) {\r\n      this.queryInfo.pagesize = newSize;\r\n      this.getcateList();\r\n    },\r\n    // 监听 pagenum 的改变\r\n    handleCurrentChange(newPage) {\r\n      this.queryInfo.pagenum = newPage;\r\n      this.getcateList();\r\n    },\r\n    // 点击按钮,暂时添加分类对对话框\r\n    showAddCatDialog() {\r\n      this.getParentCateList();\r\n      this.addCatDialogVisible = true;\r\n    },\r\n    // 获取父级分类的数据列表\r\n    async getParentCateList() {\r\n      const { data: res } = await this.$http.get(\"categories\", {\r\n        params: { type: 2 }\r\n      });\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"获取父级分类列表失败！\");\r\n      }\r\n      this.parentCateList = res.data;\r\n    },\r\n    // 选择项发生变化触发的函数\r\n    parentCateChanged() {\r\n      //  如果 selectedKeys 数组的长度大于 0 ，则证明没有选择分类\r\n      if (this.selectedKeys.length > 0) {\r\n        // 如果长度不为 0 ，则证明选择了分类，取数组的最后一位，即所选择的最后一级分类\r\n        this.addCateForm.cat_pid = this.selectedKeys[\r\n          this.selectedKeys.length - 1\r\n        ];\r\n        // 为当前分类等级赋值\r\n        this.addCateForm.cat_level = this.selectedKeys.length;\r\n      } else {\r\n        this.addCateForm.cat_pid = 0;\r\n        this.addCateForm.cat_level = 0;\r\n      }\r\n    },\r\n    // 点击按钮添加新的分类\r\n    addcate() {\r\n      // 提交前预校验\r\n      this.$refs.addCateFormRef.validate(async validate => {\r\n        if (!validate) return;\r\n        const { data: res } = await this.$http.post(\r\n          \"categories\",\r\n          this.addCateForm\r\n        );\r\n        if (res.meta.status !== 201)\r\n          return this.$message.error(\"添加商品分类失败！\");\r\n        this.$message.success(\"添加商品分类成功！\");\r\n        this.getcateList();\r\n        this.addCatDialogVisible = false;\r\n      });\r\n    },\r\n    //  监听对话框的关闭事件，重置表单\r\n    addCateDialogClosed() {\r\n      this.$refs.addCateFormRef.resetFields();\r\n      // 重置分类框\r\n      this.selectedKeys = [];\r\n      this.addCateForm.cat_level = 0;\r\n      this.addCateForm.cat_pid = 0;\r\n    },\r\n    async showEditCateDialog(id) {\r\n      // console.log(id)\r\n      const { data: res } = await this.$http.get(`categories/${id}`);\r\n      if (res.meta.status !== 200)\r\n        return this.$message.error(\"获取分类信息失败！\");\r\n      this.editCateForm = res.data;\r\n      this.editCateDialogVisible = true;\r\n    },\r\n    // 点击确定按钮提交修改信息\r\n    editCate() {\r\n      const eidtComfirm = this.$refs.editCateFormRef.validate(async valid => {\r\n        if (!valid) return;\r\n        const {\r\n          data: res\r\n        } = await this.$http.put(`categories/${this.editCateForm.cat_id}`, {\r\n          cat_name: this.editCateForm.cat_name\r\n        });\r\n        if (res.meta.status !== 200)\r\n          return this.$message.error(\"修改分类失败！\");\r\n        this.editCateDialogVisible = false;\r\n        this.$message.success(\"修改分类成功！\");\r\n        this.getcateList();\r\n      });\r\n    },\r\n    // 删除分类\r\n    async deleteCate(id) {\r\n      const deleteConfirm = await this.$confirm(\r\n        \"即将删除该分类，是否确认？\",\r\n        \"删除分类\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }\r\n      ).catch(err => err);\r\n      if (deleteConfirm !== \"confirm\") return this.$message.info(\"取消删除！\");\r\n      const { data: res } = await this.$http.delete(`categories/${id}`);\r\n      if (res.meta.status !== 200) return this.$message.error(\"删除失败！\");\r\n      this.$message.success(\"删除分类成功！\");\r\n      this.getcateList();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.treeTable {\r\n  margin-top: 15px;\r\n}\r\n\r\n.el-cascader {\r\n  width: 100%;\r\n}\r\n</style>\r\n"
        }
    ]
}